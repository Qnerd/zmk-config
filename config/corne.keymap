/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "keys_de.h"

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";

                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  |  Ä   |
// | SHFT |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp DE_Z &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp DE_OE &kp DE_AE
   &kp LSHFT &kp DE_Y &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp DE_MINS &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1   |  2  |  3  |  4  |  5  | 6   |   |  7  |  8  |  9  |  0  | ß   |  Ü   |
// | F1   | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  |  F9 | F10 | F11 | F12  |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp N1     &kp N2       &kp N3       &kp N4       &kp N5       &kp N6     &kp N7   &kp N8   &kp N9    &kp N0    &kp DE_SS &kp DE_UE
   &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6     &kp F7   &kp F8   &kp F9    &kp F10   &kp F11   &kp F11
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans     &kp LEFT &kp DOWN &kp UP    &kp RIGHT &trans    &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !   |  "  |  §  |  $  |  %  |  &  |   |  /  |  (  |  )  |  =  | ?    |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  | "|" |  {  |  }  |  +  |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp DE_EXLM   &kp DE_DQUO  &kp DE_SECT  &kp DE_DLR   &kp DE_PERC  &kp DE_AMPR       &kp DE_SLSH &kp DE_LPRN     &kp DE_RPRN  &kp DE_EQL  &kp DE_QUES &kp DE_GRV
   &bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp DE_MINS &kp DE_EQL      &kp DE_LBRC  &kp DE_RBRC &kp DE_BSLS &kp DE_ACUT
   &kp LSHFT     &kp DE_CIRC  &trans       &trans       &trans       &trans            &kp DE_UNDS &kp DE_PIPE     &kp DE_LCBR  &kp DE_RCBR &kp DE_PLUS &kp DE_TILD
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  1   |  2  |  3  |  4  |  5  | 6   |   |  7  |  8  |  9  |  0  | ß   |  Ü   |
// | F1   | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  |  F9 | F10 | F11 | F12  |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans     &kp HOME  &kp HOME    &kp UP    &trans     &kp PAGE_UP    &kp DEL
   &trans  &trans  &trans  &trans  &trans  &trans     &kp END   &kp LEFT    &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &trans
   &trans  &trans  &trans  &trans  &trans  &trans     &trans    &kp END     &trans    &trans     &trans         &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

        };
};
